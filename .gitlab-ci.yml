---
image: nixos/nix:latest

test:
  stage: test
  script:
    - nix-shell --run "set -e; make lint test"

##

build:
  stage: build
  artifacts: {paths: [main-linux-amd64]}
  script:
    - nix-shell --run "set -e; make build os=linux  binary=main-linux-amd64  version=$CI_COMMIT_SHA"

generate_description:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      nix-shell --run "
        set -e
        {
          echo -n 'CI_RELEASE_DESCRIPTION='
          git tag --format='%(contents:subject)' --list '$CI_COMMIT_TAG'
        } | sed 's|\r |\n|g' > description.env
      "
  artifacts:
    reports:
     dotenv: description.env

release:
  stage: release
  needs:
    - {job: build, artifacts: true}
    - {job: generate_description, artifacts: true}
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      nix-shell --run "
        set -e

        curl -s -H 'JOB-TOKEN: $CI_JOB_TOKEN' --upload-file main-linux-amd64  \
          $CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/goboilerplate/$CI_COMMIT_TAG/main-linux-amd64

        release-cli create                         \
          --name        '$CI_COMMIT_TAG'           \
          --ref         '$CI_COMMIT_TAG'           \
          --tag-name    '$CI_COMMIT_TAG'           \
          --description '$CI_RELEASE_DESCRIPTION'  \
          --assets-link '{\"name\":\"main-linux-amd64\", \"url\":\"$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/goboilerplate/$CI_COMMIT_TAG/main-linux-amd64\"}'
      "

stages:
  - test
  - build
  - release
